package org.appiansc.plugins.addNumbers.smartservices;

import com.appiancorp.suiteapi.common.Name;
import com.appiancorp.suiteapi.content.ContentOutputStream;
import com.appiancorp.suiteapi.content.ContentService;
import com.appiancorp.suiteapi.knowledge.Document;
import com.appiancorp.suiteapi.knowledge.DocumentDataType;
import com.appiancorp.suiteapi.knowledge.FolderDataType;
import com.appiancorp.suiteapi.process.exceptions.SmartServiceException;
import com.appiancorp.suiteapi.process.framework.AppianSmartService;
import com.appiancorp.suiteapi.process.framework.Input;
import com.appiancorp.suiteapi.process.framework.MessageContainer;
import com.appiancorp.suiteapi.process.framework.Required;
import com.appiancorp.suiteapi.process.palette.PaletteInfo;
import org.apache.log4j.Logger;
import org.appiansc.plugins.addNumbers.datatypes.ExampleDatatype;
import org.appiansc.plugins.addNumbers.helpers.SathyaPluginHelper;

@PaletteInfo(paletteCategory = SathyaPluginHelper.SMARTSERVICE_PALLETCATEGORY, palette = SathyaPluginHelper.SMARTSERVICE_PALLET)
public class SathyaSmartService extends AppianSmartService {
    private static final Logger LOG = Logger.getLogger(SathyaSmartService.class);

    // Input private vars
//    private ExampleDatatype exampleDatatype;
//    private Long someAppianDocument;
//    private String someDropdownValue;
//    private String basicStringField;
//    private Long someAppianFolder;

    private Integer num1;
    private Integer num2;

    // Output private vars

    private Integer returnNum;
//    private Long convertedDocument;
//    private String errorTxt;
//    private Boolean errorOccurred = false;

    private final ContentService contentService;

    @Override
    public void run() throws SmartServiceException {
        try {
            // Do your heavy lifting here

            LOG.info("Starting Now");

//            Document appianDocument = SathyaPluginHelper.getDocument(this.contentService, this.someAppianDocument);

            returnNum = num1+num2;
            LOG.info("Finished...");

//            LOG.info("Appian document is physically located at: " +
//                    SathyaPluginHelper.getPhysicalFilePath(this.contentService, appianDocument.getId()));

//            Document newDocument = SathyaPluginHelper.createNewDocument(
//                    this.basicStringField,
//                    "New document generated by my plugin",
//                    this.someAppianFolder,
//                    this.someDropdownValue
//            );

//            ContentOutputStream cos = SathyaPluginHelper.uploadDocumentForWriting(this.contentService, newDocument);
//
//            // write to the cos stream or something...
//
//            this.convertedDocument = cos.getContentId(); // get the new Document's ID
//
//            cos.close();

        } catch (Exception e) {
            LOG.error(e.getMessage());
//            errorOccurred = true;
//            errorTxt = e.getMessage();
        }
    }

    public SathyaSmartService(ContentService contentService) {
        super();
        this.contentService = contentService;
    }

    @Override
    public void onSave(MessageContainer messages) {
    }

    @Override
    public void validate(MessageContainer messages) {
    }


    // Inputs
    @Input(required = Required.ALWAYS)
    @Name("num1")
    public void setNum1(Integer num1){
        this.num1 = num1;
    }

    @Input(required = Required.ALWAYS)
    @Name("num2")
    public void setNum2(Integer num2){
        this.num2 = num2;
    }

//    @Input(required = Required.ALWAYS)
//    @Name("num1")
//    public void setExampleDatatype(ExampleDatatype val) {
//        this.exampleDatatype = val;
//    }
//
//    @Input(required = Required.ALWAYS)
//    @Name("someAppianDocument")
//    @DocumentDataType
//    public void setSomeAppianDocument(Long val) {
//        this.someAppianDocument = val;
//    }
//
//    @Input(required = Required.OPTIONAL)
//    @Name("someAppianFolder")
//    @FolderDataType
//    public void setSomeAppianFolder(Long val) {
//        this.someAppianFolder = val;
//    }
//
//    @Input(required = Required.ALWAYS, enumeration = "listOfStringItems")
//    @Name("someDropdownValue")
//    public void setSomeDropdownValue(String val) {
//        this.someDropdownValue = val;
//    }
//
//    @Input(required = Required.OPTIONAL)
//    @Name("basicStringField")
//    public void setBasicStringField(String val) {
//        this.basicStringField = val;
//    }


    // Outputs

//    @Name("convertedDocument")
//    @DocumentDataType
//    public Long getConvertedDocument() {
//        return convertedDocument;
//    }
//
//    @Name("errorTxt")
//    public String getErrorTxt() {
//        return errorTxt;
//    }
//
//    @Name("errorOccurred")
//    public Boolean getErrorOccurred() {
//        return errorOccurred;
//    }
      @Name("returnNum")
      public Integer getReturnNum(){
        return returnNum;
      }

}
